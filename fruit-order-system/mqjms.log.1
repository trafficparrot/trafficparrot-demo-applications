14 December 2017 13:28:51 GMT[qtp1360767589-25] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:28:51 GMT[qtp1360767589-23] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:28:52 GMT[qtp1360767589-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:28:53 GMT[qtp1360767589-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:28:54 GMT[qtp1360767589-21] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:28:55 GMT[qtp1360767589-41] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:11 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:11 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:14 GMT[qtp931919113-32] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:15 GMT[qtp931919113-33] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:16 GMT[qtp931919113-31] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:20 GMT[qtp931919113-44] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:21 GMT[qtp931919113-30] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:22 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:23 GMT[qtp931919113-45] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:24 GMT[qtp931919113-54] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:29:25 GMT[qtp931919113-57] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:31 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:32 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:37 GMT[qtp931919113-30] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:38 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:39 GMT[qtp931919113-35] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:41 GMT[qtp931919113-36] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:42 GMT[qtp931919113-34] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:53 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:54 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:55 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:56 GMT[qtp931919113-30] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:57 GMT[qtp931919113-33] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:31:58 GMT[qtp931919113-36] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:15 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:16 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:17 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:18 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:19 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:20 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:44 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:45 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:33:46 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:10 GMT[qtp931919113-15] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:10 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:11 GMT[qtp931919113-15] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:12 GMT[qtp931919113-14] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:13 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:13 GMT[qtp931919113-15] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:14 GMT[qtp931919113-14] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:15 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:16 GMT[qtp931919113-15] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:17 GMT[qtp931919113-14] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:37:18 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:10 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:10 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:11 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:12 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:12 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:13 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:39:14 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:10 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:10 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:11 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:12 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:13 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:13 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:14 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:15 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:16 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:17 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:18 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:19 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:20 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:21 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:22 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:23 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:24 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:25 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:26 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:27 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:28 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:29 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:30 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:31 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:32 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:33 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:34 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:35 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:36 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:37 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:38 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:39 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:40 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:41 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:42 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:43 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:44 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:45 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:46 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:47 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:48 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:49 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:50 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:51 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:52 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:53 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:54 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:55 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:56 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:57 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:58 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:40:59 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:00 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:01 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:02 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:03 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:04 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:05 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:06 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:07 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:08 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:09 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:10 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:11 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:12 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:13 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:14 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:15 GMT[qtp931919113-48] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:16 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:17 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:18 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:19 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:20 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:21 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:22 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:23 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:24 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:25 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:26 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:27 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:28 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:29 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:30 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:31 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:32 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:33 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:34 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:35 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:36 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:37 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:38 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:39 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:40 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:41 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:42 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:43 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:44 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:45 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:46 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:47 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:48 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:49 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:50 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:51 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:52 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:53 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:54 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:55 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:56 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:57 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:58 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:41:59 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:00 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:01 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:02 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:03 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:04 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:05 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:06 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:07 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:08 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:09 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:10 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:11 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:12 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:13 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:14 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:15 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:16 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:17 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:18 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:19 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:20 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:21 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:22 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:23 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:24 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:25 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:26 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:27 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:28 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:29 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:30 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:31 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:32 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:33 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:34 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:35 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:36 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:37 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:38 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:39 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:40 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:41 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:42 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:43 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:44 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:45 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:46 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:47 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:48 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:49 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:50 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:51 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:52 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:53 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:54 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:55 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:56 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:57 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:58 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:42:59 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:00 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:01 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:02 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:03 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:04 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:05 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:06 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:07 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:08 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:09 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:10 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:11 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:12 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:13 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:14 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:15 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:16 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:17 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:18 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:19 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:20 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:21 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:22 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:23 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:24 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:25 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:26 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:27 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:28 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:29 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:30 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:31 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:32 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:33 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:34 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:35 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:36 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:37 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:38 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:39 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:40 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:41 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:42 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:43 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:44 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:45 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:46 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:47 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:48 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:49 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:50 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:51 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:52 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:53 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:54 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:55 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:56 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:57 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:58 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:43:59 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:00 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:01 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:02 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:03 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:04 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:05 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:06 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:07 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:08 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:09 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:10 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:11 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:12 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:13 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:14 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:15 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:16 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:17 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:18 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:19 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:20 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:21 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:22 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:23 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:24 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:25 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:26 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:27 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:28 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:29 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:30 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:31 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:32 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:33 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:34 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:35 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:36 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:37 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:38 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:39 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:40 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:41 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:42 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:43 GMT[qtp931919113-50] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:45 GMT[qtp931919113-628] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:46 GMT[qtp931919113-627] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:49 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:49 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:50 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:51 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:52 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:53 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:54 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:55 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:56 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:57 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:58 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:44:59 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:00 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:01 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:02 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:03 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:04 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:05 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:06 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:07 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:08 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:09 GMT[qtp931919113-17] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:14 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:14 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:15 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:16 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:17 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:18 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:19 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:20 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:22 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:23 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:24 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:25 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:26 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:27 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:28 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:29 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:30 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:31 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:32 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:33 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:34 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:35 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:36 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:37 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:38 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:39 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:40 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:41 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:42 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:43 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:44 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:45 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:46 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:47 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:48 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:49 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:50 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:51 GMT[qtp931919113-19] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:52 GMT[qtp931919113-16] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:53 GMT[qtp931919113-18] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:54 GMT[qtp931919113-49] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
14 December 2017 13:45:55 GMT[qtp931919113-137] com.ibm.msg.client.jms.internal.JmsConnectionImpl
Calling receive will not return a message for a connection that is stopped.

EXPLANATION:
The JMS specification says that calling the receive() method must not return a message if the connection is stopped. Calling receiveNoWait or receive with a timeout will return null when the timeout expires. Calling receive with no timeout will not return until the connection is started or closed or the application terminates.

ACTION:
Start the connection by calling javax.jms.Connection.start(). 
--------------------------------------------------------------------
